[编程题] 字符串碎片
一个由小写字母组成的字符串可以看成一些同一字母的最大碎片组成的。
例如,"aaabbaaac"是由下面碎片组成的:'aaa','bb','c'。牛牛现在给定一个字符串,请你帮助计算这个字符串的所有碎片的平均长度是多少。

输入描述:
输入包括一个字符串s,字符串s的长度length(1 ≤ length ≤ 50),s只含小写字母('a'-'z')


输出描述:
输出一个整数,表示所有碎片的平均长度,四舍五入保留两位小数。

如样例所示: s = "aaabbaaac"
所有碎片的平均长度 = (3 + 2 + 3 + 1) / 4 = 2.25

输入例子1:
aaabbaaac

输出例子1:
2.25

import java.io.BufferedReader;
import java.io.InputStreamReader;
public class Main3 {
	public static void main(String[] args) throws Exception{
	       InputStreamReader is=new InputStreamReader(System.in);
	       BufferedReader br=new BufferedReader(is);
	       String str=br.readLine();
	       char Array[]=str.toCharArray(); 
	       int l=Array.length;//长度
	       int a[]=new int[l];
	       for(int q=0;q<l;q++){
	    	   
	    	   a[q]=(int)Array[q];
	    	   
	    	  
	       }
	      
	       int m=1,n=1,k=0,t=0;//m记次数，n记字母个数
			int b[]=new int[50];
		      for(int j=0;j+1<l;j++)
		    	
		    	  {if(a[j]==(a[j+1])){
		    		 n++;	    		 
		    		 }
		    	  if(a[j]!=a[j+1]){
		    		  b[k]=n; 
		    		  
		    		  m++;
		    		  k++;
		    		  n=1;
		    		  t=m;
		    	  }
		    			
		    		  }
		    
		      if(a[l-1]==a[l-2])
		      {b[k-1]+=n;}
		      
		      if(a[l-1]!=a[l-2])
		      { m++;b[k]=1;}
		      
		      int s=0;
		    
		      for(int c=0;c<=k;c++){
		    	  s+=b[c];
		    	  
		      }
		      double v=(double)s/t;
		   
		      System.out.printf("%.2f",v);
	     
	       
		
	}	      
}

